
# coding: utf-8

# # Direction Coefficient / 方位係数

# ## 1. Introduction

# This calculation depends on the specification of "Appendix C Direction Coefficient" of "Chapter III - I Envelop Performance" in BRI.

# ## 3. Functions

# Direction coefficient depends on the region and direction.

# ### 3.1 Heating

# | Direction | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |
# | :---:  | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
# | S      | 0.935 | 0.856 | 0.851 | 0.815 | 0.983 | 0.936 | 1.023 | ND    |
# | SW     | 0.790 | 0.753 | 0.750 | 0.723 | 0.815 | 0.763 | 0.848 | ND    |
# | W      | 0.535 | 0.544 | 0.542 | 0.527 | 0.538 | 0.523 | 0.548 | ND    |
# | NW     | 0.325 | 0.341 | 0.351 | 0.326 | 0.297 | 0.317 | 0.284 | ND    |
# | N      | 0.260 | 0.263 | 0.284 | 0.256 | 0.238 | 0.261 | 0.227 | ND    |
# | NE     | 0.333 | 0.341 | 0.348 | 0.330 | 0.310 | 0.325 | 0.281 | ND    |
# | E      | 0.564 | 0.554 | 0.540 | 0.531 | 0.568 | 0.579 | 0.543 | ND    |
# | SE     | 0.823 | 0.766 | 0.751 | 0.724 | 0.846 | 0.833 | 0.843 | ND    |
# | top    | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | ND    |
# | bottom | 0.000 | 0.000 | 0.000 | 0.000 | 0.000 | 0.000 | 0.000 | ND    |

# In[1]:

def get_nu_H(region):
    # region: 'region1, region2, region3...region8 as string'
    r = { 'region1' : 1, 'region2' : 2, 'region3' : 3, 'region4' : 4, 'region5' : 5, 'region6' : 6, 'region7' : 7, 'region8' : 8 }[region]
    
    S      = [ 0.935, 0.856, 0.851, 0.815, 0.983, 0.936, 1.023, 'ND' ][r-1]
    SW     = [ 0.790, 0.753, 0.750, 0.723, 0.815, 0.763, 0.848, 'ND' ][r-1]
    W      = [ 0.535, 0.544, 0.542, 0.527, 0.538, 0.523, 0.548, 'ND' ][r-1]
    NW     = [ 0.325, 0.341, 0.351, 0.326, 0.297, 0.317, 0.284, 'ND' ][r-1]
    N      = [ 0.260, 0.263, 0.284, 0.256, 0.238, 0.261, 0.227, 'ND' ][r-1]
    NE     = [ 0.333, 0.341, 0.348, 0.330, 0.310, 0.325, 0.281, 'ND' ][r-1]
    E      = [ 0.564, 0.554, 0.540, 0.531, 0.568, 0.579, 0.543, 'ND' ][r-1]
    SE     = [ 0.823, 0.766, 0.751, 0.724, 0.846, 0.833, 0.843, 'ND' ][r-1]
    top    = [ 1.0,   1.0,   1.0,   1.0,   1.0,   1.0,   1.0,   'ND' ][r-1]
    bottom = [ 0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   'ND' ][r-1]
    
    return { 'S' : S, 'SW' : SW, 'W' : W, 'NW' : NW, 'N' : N, 'NE' : NE, 'E' : E, 'SE' : SE, 'top' : top, 'bottom' : bottom }


# ### Cooling

# | direction | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |
# | :---:  | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
# | S      | 0.502 | 0.507 | 0.476 | 0.437 | 0.472 | 0.434 | 0.412 | 0.480 |
# | SW     | 0.526 | 0.548 | 0.550 | 0.481 | 0.520 | 0.491 | 0.479 | 0.517 |
# | W      | 0.508 | 0.529 | 0.553 | 0.481 | 0.518 | 0.504 | 0.495 | 0.505 |
# | NW     | 0.411 | 0.428 | 0.447 | 0.401 | 0.442 | 0.427 | 0.406 | 0.411 |
# | N      | 0.329 | 0.341 | 0.335 | 0.322 | 0.373 | 0.341 | 0.307 | 0.325 |
# | NE     | 0.430 | 0.412 | 0.390 | 0.426 | 0.437 | 0.431 | 0.415 | 0.414 |
# | E      | 0.545 | 0.503 | 0.468 | 0.518 | 0.500 | 0.512 | 0.509 | 0.515 |
# | SE     | 0.560 | 0.527 | 0.487 | 0.508 | 0.500 | 0.498 | 0.490 | 0.528 |
# | top    | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 | 1.000 |
# | bottom | 0.000 | 0.000 | 0.000 | 0.000 | 0.000 | 0.000 | 0.000 | 0.000 |

# In[2]:

def get_nu_C(region):
    # region: 'region1, region2, region3...region8 as string'
    r = { 'region1' : 1, 'region2' : 2, 'region3' : 3, 'region4' : 4, 'region5' : 5, 'region6' : 6, 'region7' : 7, 'region8' : 8 }[region]

    S      = [ 0.502, 0.507, 0.476, 0.437, 0.472, 0.434, 0.412, 0.480 ][r-1]
    SW     = [ 0.526, 0.548, 0.550, 0.481, 0.520, 0.491, 0.479, 0.517 ][r-1]
    W      = [ 0.508, 0.529, 0.553, 0.481, 0.518, 0.504, 0.495, 0.505 ][r-1]
    NW     = [ 0.411, 0.428, 0.447, 0.401, 0.442, 0.427, 0.406, 0.411 ][r-1]
    N      = [ 0.329, 0.341, 0.335, 0.322, 0.373, 0.341, 0.307, 0.325 ][r-1]
    NE     = [ 0.430, 0.412, 0.390, 0.426, 0.437, 0.431, 0.415, 0.414 ][r-1]
    E      = [ 0.545, 0.503, 0.468, 0.518, 0.500, 0.512, 0.509, 0.515 ][r-1]
    SE     = [ 0.560, 0.527, 0.487, 0.508, 0.500, 0.498, 0.490, 0.528 ][r-1]
    top    = [ 1.0,   1.0,   1.0,   1.0,   1.0,   1.0,   1.0,   1.0   ][r-1]
    bottom = [ 0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0   ][r-1]
    
    return { 'S' : S, 'SW' : SW, 'W' : W, 'NW' : NW, 'N' : N, 'NE' : NE, 'E' : E, 'SE' : SE, 'top' : top, 'bottom' : bottom }


# #### Example

# In[3]:

get_nu_H('region3')


# In[4]:

get_nu_H('region8')


# In[5]:

get_nu_C('region3')


# In[6]:

get_nu_C('region8')

